{"version":3,"file":"component---src-components-layout-tsx-content-file-path-days-2024-11-mdx-ae4de85958178e05cc67.js","mappings":"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","sources":["webpack://joel-allan-nz.github.io/./days/2024/11.mdx","webpack://joel-allan-nz.github.io/./src/components/Layout.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    em: \"em\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components), {CodeBox} = _components;\n  if (!CodeBox) _missingMdxReference(\"CodeBox\", true);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"Part One\"), \"\\n\", React.createElement(_components.p, null, \"Although I was expecting a real headscratcher, this has a good argument to be the easiest of the year to date! There's really no trick to it beyond needing to use a little memoization.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"The key insight here is that stones don't affect the progression of other stones,\\nso we can work stone-by-stone, and remembering the results of applying the rules\\nto a stone for a given number of blinks can prevent us from having to re-do work\\nlater.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"Consider the most obvious example, where we have two stones: \", React.createElement(_components.code, null, \"0 0\"), \". After 25 blinks\\neach stones ought to have the same value. Or, a slightly more realistic example:\\n\", React.createElement(_components.code, null, \"1 0\"), \". 0's first blink will give it the value of one, so after running 25 blinks\\non 1, we'll \", React.createElement(_components.em, null, \"also know the result of running \", React.createElement(_components.em, null, \"26\"), \" blinks for 0\"), \". That's potentially\\na lot of repetition saved!\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"The one 'trick' that might need a touch of explanation is \", React.createElement(_components.code, null, \"if(Math.floor(Math.log10(stone))%2==0)\"), \".\\nIt's simply checking whether a value has an odd number of digits - \", React.createElement(_components.code, null, \"Math.log10(1000)\"), \"=\\n3, \", React.createElement(_components.code, null, \"Math.log10(10000)\"), \" = 4 etc, with the \", React.createElement(_components.code, null, \"Math.floor()\"), \" ensuring we get an integer\\nvalue to check with the modulo operator.\"), \"\\n\", React.createElement(CodeBox, {\n    boxname: \"one\",\n    names: \"typescript|C#\"\n  }, React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"export function partOne(input: string[]): number | string {\\n  const cache = new Map<number, Map<number, number>>()\\n\\n  return input[0]\\n    .split(' ')\\n    .map((x) => parseInt(x))\\n    .reduce((total, current) => total + applyRules(current, 25, cache), 0)\\n}\\n\\nexport function applyRules(\\n  stone: number,\\n  count: number,\\n  cache: Map<number, Map<number, number>>\\n): number {\\n  if (cache.has(stone)) {\\n    const blinks = cache.get(stone)\\n    if (blinks?.has(count)) return blinks.get(count)!\\n  }\\n\\n  if (count == 0) return nestedAdd(cache, stone, 0, 1)\\n  if (stone == 0)\\n    return nestedAdd(cache, stone, count, applyRules(1, count - 1, cache))\\n  if (Math.floor(Math.log10(stone)) % 2 == 0)\\n    return nestedAdd(\\n      cache,\\n      stone,\\n      count,\\n      applyRules(stone * 2024, count - 1, cache)\\n    )\\n\\n  let s = stone.toString()\\n  let half = Math.floor(s.length / 2)\\n  return nestedAdd(\\n    cache,\\n    stone,\\n    count,\\n    applyRules(parseInt(s.slice(0, half)), count - 1, cache) +\\n      applyRules(parseInt(s.slice(half)), count - 1, cache)\\n  )\\n}\\n\\nfunction nestedAdd<T, U, V>(\\n  map: Map<T, Map<U, V>>,\\n  key: T,\\n  nestedKey: U,\\n  value: V\\n): V {\\n  if (!map.has(key)) {\\n    map.set(key, new Map<U, V>([[nestedKey, value]]))\\n  } else if (!map.get(key)?.has(nestedKey)) {\\n    map.get(key)?.set(nestedKey, value)\\n  }\\n  return value\\n}\\n\")), React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-csharp\"\n  }, \"Dictionary<long, Dictionary<long, long>>? cache;\\n\\npublic override object PartOne()\\n{\\n    cache ??= [];\\n\\n    return Input[0].Split(' ', StringSplitOptions.RemoveEmptyEntries)\\n                  .Select(x => long.Parse(x))\\n                  .Sum(x => ApplyRules(x, 25, cache));\\n}\\n\\nprivate static long ApplyRules(long stone, int count, Dictionary<long, Dictionary<long, long>> cache)\\n{\\n  if (cache.TryGetValue(stone, out var blinks))\\n  {\\n      if (blinks.TryGetValue(count, out var stones))\\n      {\\n          return stones;\\n      }\\n  }\\n\\n  if (count == 0)\\n      return cache.NestedAdd(stone, 0, 1);\\n\\n  if (stone == 0)\\n  {\\n      return cache.NestedAdd(stone, count, ApplyRules(1, count - 1, cache));\\n  }\\n  else if (Math.Floor(Math.Log10(stone)) % 2 == 0)\\n  {\\n      return cache.NestedAdd(stone, count, ApplyRules(stone * 2024, count - 1, cache));\\n  }\\n\\n  var s = stone.ToString();\\n  var halfLength = s.Length / 2;\\n  return cache.NestedAdd(stone, count, ApplyRules(long.Parse(s[0..halfLength]), count - 1, cache) +\\n                                    ApplyRules(long.Parse(s[halfLength..]), count - 1, cache));\\n\\n}\\n\\npublic static V NestedAdd<TKey, UKey, V>(this Dictionary<TKey, Dictionary<UKey, V>> dictionary,\\n    TKey key, UKey nestedKey, V value) where TKey : notnull where UKey : notnull\\n{\\n    if (!dictionary.TryGetValue(key, out Dictionary<UKey, V>? subDict))\\n    {\\n        subDict = [];\\n        dictionary[key] = subDict;\\n    }\\n    subDict[nestedKey] = value;\\n    return value;\\n}\\n\"))), \"\\n\", React.createElement(_components.h2, null, \"Part Two\"), \"\\n\", React.createElement(_components.p, null, \"Exact same algorithm, just starting with a bigger input.\"), \"\\n\", React.createElement(CodeBox, {\n    boxname: \"two\",\n    names: \"typescript|C#\"\n  }, React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"export function partTwo(input: string[]): number | string {\\n  const cache = new Map<number, Map<number, number>>()\\n\\n  return input[0]\\n    .split(' ')\\n    .map((x) => parseInt(x))\\n    .reduce((total, current) => total + applyRules(current, 75, cache), 0)\\n}\\n\")), React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-csharp\"\n  }, \"public override object PartTwo()\\n{\\n    cache ??= [];\\n\\n    return Input[0].Split(' ', StringSplitOptions.RemoveEmptyEntries)\\n                    .Select(x => long.Parse(x))\\n                    .Sum(x => ApplyRules(x, 75, cache));\\n}\\n\"))));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"/home/joel/personal/advent-of-code/joel-allan-nz.github.io/days/2024/11.mdx\";\nimport React from 'react';\nimport {MDXProvider} from '@mdx-js/react';\nimport CodeBox from './CodeBox';\nimport TryYourself from './TryYourself';\nimport AdventSideNav from './AdventSideNav';\nimport Header from './Header';\nimport Footer from './Footer';\nconst shortcodes = {\n  CodeBox\n};\nfunction Layout(_ref) {\n  let {pageContext, children} = _ref;\n  return React.createElement(React.Fragment, null, React.createElement(Header, null), React.createElement(\"div\", {\n    className: \"min-h-screen bg-chicPrimary\"\n  }, React.createElement(AdventSideNav, {\n    props: pageContext.list\n  }), React.createElement(\"div\", {\n    className: \"adventofcode max-w-[60%] ml-[20%]\"\n  }, React.createElement(\"h1\", null, React.createElement(\"a\", {\n    href: \"https://adventofcode.com/\" + pageContext.year + \"/day/\" + pageContext.puzz\n  }, pageContext.year + \" Day \" + pageContext.puzz + \" - \" + pageContext.title)), React.createElement(MDXProvider, {\n    components: shortcodes\n  }, children), pageContext.puzz && pageContext.year ? React.createElement(TryYourself, {\n    year: pageContext.year,\n    puzz: pageContext.puzz\n  }) : React.createElement(React.Fragment, null))), React.createElement(Footer, null));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Layout, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = () => React.createElement(React.Fragment, null, React.createElement(\"title\", null, \"Joel-Allan-NZ - Advent of Code\"), React.createElement(\"html\", {\n  lang: \"en\"\n}), React.createElement(\"link\", {\n  rel: \"preconnect\",\n  href: \"https://fonts.googleapis.com\"\n}), React.createElement(\"link\", {\n  rel: \"preconnect\",\n  href: \"https://fonts.gstatic.com\"\n}), React.createElement(\"link\", {\n  href: \"https://fonts.googleapis.com/css2?family=Orbitron:wght@400..900&family=Roboto+Serif:ital,opsz,wght@0,8..144,100..900;1,8..144,100..900&family=VT323&display=swap\",\n  rel: \"stylesheet\"\n}));\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","em","pre","_provideComponents","components","CodeBox","id","component","Error","_missingMdxReference","React","boxname","names","className","wrapper","MDXLayout","shortcodes","Layout","_ref","pageContext","children","Header","AdventSideNav","list","href","year","puzz","title","MDXProvider","TryYourself","Footer","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","lang","rel"],"sourceRoot":""}