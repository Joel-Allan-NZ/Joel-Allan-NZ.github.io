"use strict";(self.webpackChunkjoel_allan_nz_github_io=self.webpackChunkjoel_allan_nz_github_io||[]).push([[8035],{4860:function(e,n,t){t.r(n),t.d(n,{Head:function(){return E},default:function(){return y}});var l=t(8453),r=t(6540);function o(e){const n=Object.assign({h2:"h2",p:"p",pre:"pre",code:"code"},(0,l.RP)(),e.components),{CodeBox:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("CodeBox",!0),r.createElement(r.Fragment,null,r.createElement(n.h2,null,"Part One"),"\n",r.createElement(n.p,null,"Christmas Day! ðŸŽ„ This one's effectively a freebie where you can take any lazy approach and have a quick result."),"\n",r.createElement(t,{boxname:"one",names:"typescript|C#"},r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"export function partOne(input: string[]): number | string {\n  const { keys, locks } = parse(input)\n\n  return keys.reduce(\n    (total, key) => total + locks.filter((lock) => isFit(key, lock, 5)).length,\n    0\n  )\n}\n\nfunction parse(input: string[]): { keys: number[][], locks: number[][] } {\n  const DIAGRAMHEIGHT = 7\n  const KEYSIZE = 5\n  const keys: number[][] = []\n  const locks: number[][] = []\n\n  for (let i = 0; i < input.length; i += DIAGRAMHEIGHT + 1) {\n    const lockOrKey: number[] = Array(5).fill(-1)\n    for (let j = 0; j < DIAGRAMHEIGHT; j++) {\n      for (let k = 0; k < KEYSIZE; k++) {\n        if (input[i + j][k] == '#') lockOrKey[k]++\n      }\n    }\n    if (input[i][0] != '#') keys.push(lockOrKey)\n    else locks.push(lockOrKey)\n  }\n\n  return { keys, locks }\n}\n\nfunction isFit(key: number[], lock: number[], keySize: number): boolean {\n  return key.every((value, index) => lock[index] + value <= keySize)\n}\n")),r.createElement(n.pre,null,r.createElement(n.code,{className:"language-csharp"},"const int DIAGRAMHEIGHT = 7;\nconst int KEYSIZE = 5;\n\npublic override object PartOne()\n{\n    var (keys, locks) = Parse();\n\n    return keys.Sum(key => locks.Count(l => IsFit(key, l)));\n\n    static bool IsFit(int[] key, int[] l) => key.Zip(l).All(x => x.First + x.Second <= KEYSIZE);\n}\n\nprivate static bool IsFit(int[] key, int[] l) => key.Zip(l).All(x => x.First + x.Second <= KEYSIZE);\n\nprivate (IEnumerable<int[]> keys, IEnumerable<int[]> locks) Parse()\n{\n    List<int[]> keys = [];\n    List<int[]> locks = [];\n\n    for (int i = 0; i < Input.Length; i += (DIAGRAMHEIGHT + 1))\n    {\n        int[] lockOrKey = [-1, -1, -1, -1, -1];\n        for (int j = 0; j < DIAGRAMHEIGHT; j++)\n        {\n            for (int k = 0; k < KEYSIZE; k++)\n            {\n                if (Input[i + j][k] == '#')\n                    lockOrKey[k]++;\n            }\n        }\n        if (Input[i][0] != '#')\n            keys.Add(lockOrKey);\n        else\n            locks.Add(lockOrKey);\n    }\n    return (keys, locks);\n}\n\n"))),"\n",r.createElement(n.h2,null,"Part Two"),"\n",r.createElement(n.p,null,"The second part of christmas is a free star! :)"))}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.RP)(),e.components);return n?r.createElement(n,e,r.createElement(o,e)):o(e)};var a=t(2779),i=t(7206),s=t(791),u=t(4813),m=t(572);const k={CodeBox:a.A};function p(e){let{pageContext:n,children:t}=e;return r.createElement(r.Fragment,null,r.createElement(u.A,null),r.createElement("div",{className:"min-h-screen bg-chicPrimary"},r.createElement(s.A,{props:n.list}),r.createElement("div",{className:"adventofcode max-w-[60%] ml-[20%]"},r.createElement("h1",null,r.createElement("a",{href:"https://adventofcode.com/"+n.year+"/day/"+n.puzz},n.year+" Day "+n.puzz+" - "+n.title)),r.createElement(l.xA,{components:k},t),n.puzz&&n.year?r.createElement(i.A,{year:n.year,puzz:n.puzz}):r.createElement(r.Fragment,null))),r.createElement(m.A,null))}function y(e){return r.createElement(p,e,r.createElement(c,e))}const E=()=>r.createElement(r.Fragment,null,r.createElement("title",null,"Joel-Allan-NZ - Advent of Code"),r.createElement("html",{lang:"en"}),r.createElement("link",{rel:"preconnect",href:"https://fonts.googleapis.com"}),r.createElement("link",{rel:"preconnect",href:"https://fonts.gstatic.com"}),r.createElement("link",{href:"https://fonts.googleapis.com/css2?family=Orbitron:wght@400..900&family=Roboto+Serif:ital,opsz,wght@0,8..144,100..900;1,8..144,100..900&family=VT323&display=swap",rel:"stylesheet"}))}}]);
//# sourceMappingURL=component---src-components-layout-tsx-content-file-path-days-2024-25-mdx-78d0337fe5d8c0e46aa1.js.map